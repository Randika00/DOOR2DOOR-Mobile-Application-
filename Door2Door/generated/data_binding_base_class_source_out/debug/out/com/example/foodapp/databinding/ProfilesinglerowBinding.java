// Generated by view binder compiler. Do not edit!
package com.example.foodapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.foodapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProfilesinglerowBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView deleteicon;

  @NonNull
  public final ImageView editicon;

  @NonNull
  public final EditText emailtext;

  @NonNull
  public final CircleImageView img1;

  @NonNull
  public final EditText nametext;

  @NonNull
  public final EditText phonetext;

  private ProfilesinglerowBinding(@NonNull RelativeLayout rootView, @NonNull ImageView deleteicon,
      @NonNull ImageView editicon, @NonNull EditText emailtext, @NonNull CircleImageView img1,
      @NonNull EditText nametext, @NonNull EditText phonetext) {
    this.rootView = rootView;
    this.deleteicon = deleteicon;
    this.editicon = editicon;
    this.emailtext = emailtext;
    this.img1 = img1;
    this.nametext = nametext;
    this.phonetext = phonetext;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProfilesinglerowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProfilesinglerowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.profilesinglerow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProfilesinglerowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteicon;
      ImageView deleteicon = rootView.findViewById(id);
      if (deleteicon == null) {
        break missingId;
      }

      id = R.id.editicon;
      ImageView editicon = rootView.findViewById(id);
      if (editicon == null) {
        break missingId;
      }

      id = R.id.emailtext;
      EditText emailtext = rootView.findViewById(id);
      if (emailtext == null) {
        break missingId;
      }

      id = R.id.img1;
      CircleImageView img1 = rootView.findViewById(id);
      if (img1 == null) {
        break missingId;
      }

      id = R.id.nametext;
      EditText nametext = rootView.findViewById(id);
      if (nametext == null) {
        break missingId;
      }

      id = R.id.phonetext;
      EditText phonetext = rootView.findViewById(id);
      if (phonetext == null) {
        break missingId;
      }

      return new ProfilesinglerowBinding((RelativeLayout) rootView, deleteicon, editicon, emailtext,
          img1, nametext, phonetext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

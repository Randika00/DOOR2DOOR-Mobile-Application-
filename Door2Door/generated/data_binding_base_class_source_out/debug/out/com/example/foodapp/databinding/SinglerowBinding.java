// Generated by view binder compiler. Do not edit!
package com.example.foodapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.foodapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SinglerowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView deleteicon;

  @NonNull
  public final TextView discriptiontext;

  @NonNull
  public final ImageView editicon;

  @NonNull
  public final CircleImageView img1;

  @NonNull
  public final TextView nametext;

  @NonNull
  public final TextView pricetext;

  private SinglerowBinding(@NonNull CardView rootView, @NonNull ImageView deleteicon,
      @NonNull TextView discriptiontext, @NonNull ImageView editicon, @NonNull CircleImageView img1,
      @NonNull TextView nametext, @NonNull TextView pricetext) {
    this.rootView = rootView;
    this.deleteicon = deleteicon;
    this.discriptiontext = discriptiontext;
    this.editicon = editicon;
    this.img1 = img1;
    this.nametext = nametext;
    this.pricetext = pricetext;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SinglerowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SinglerowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.singlerow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SinglerowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteicon;
      ImageView deleteicon = rootView.findViewById(id);
      if (deleteicon == null) {
        break missingId;
      }

      id = R.id.discriptiontext;
      TextView discriptiontext = rootView.findViewById(id);
      if (discriptiontext == null) {
        break missingId;
      }

      id = R.id.editicon;
      ImageView editicon = rootView.findViewById(id);
      if (editicon == null) {
        break missingId;
      }

      id = R.id.img1;
      CircleImageView img1 = rootView.findViewById(id);
      if (img1 == null) {
        break missingId;
      }

      id = R.id.nametext;
      TextView nametext = rootView.findViewById(id);
      if (nametext == null) {
        break missingId;
      }

      id = R.id.pricetext;
      TextView pricetext = rootView.findViewById(id);
      if (pricetext == null) {
        break missingId;
      }

      return new SinglerowBinding((CardView) rootView, deleteicon, discriptiontext, editicon, img1,
          nametext, pricetext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
